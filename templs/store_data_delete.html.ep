%#
%# $Id$
%#
% layout 'default';
% title 'Dumper';
% use Mojo::Util qw(dumper url_escape);
% use Mojo::JSON qw(decode_json);


% my $m = $self->app->model;

% my $store_id = $req->param('id');
% my $dataname = $req->param('dataname');

% my $store_profile = $m->store_profile($store_id);
% my $store_hostname = $store_profile->{'hostname'};
% my $store_username = $store_profile->{'username'};
% my $store_password = $store_profile->{'password'};

% my $job_id = $m->job_create;
% $m->job_update(
%     $job_id,
%     type => 'dropdata',
%     sourceid => $store_id,
%     destid => $store_id,
%     author => $c->session('username')
% );

% my $ua = Mojo::UserAgent->new(max_redirects => 5);

% my $datanameEsc = url_escape $dataname;
% my $param = "dataname=$datanameEsc";

% my $tx = $ua->get("https://$store_username:$store_password\@$store_hostname:3002/data/delete?$param");

% my $body;
% eval { $body = $tx->result->body };
% $body ||= '{"result":"mistake"}';
% my $res = decode_json($body);

% if ($res->{success}) {
    <div class="callout success">
        Store <%= $store_hostname %> deleted <%= $dataname %> as job <%= $job_id %>.
    </div>
%   $m->store_data_update($store_id);
%   $m->job_update($job_id, status => 'deleted', error => 'noerr', stop => $m->timestamp);
% }

% if ($res->{success}) {
    <div class="callout alert">
        Agent <%= $store_hostname %> cannot delete <%= $dataname %>. 
        Job <%= $job_id %> was cancel.
    </div>
%   $m->job_update($job_id, status => 'pushjob', error => 'pusherr', stop => $m->timestamp);
% }

<div class="text-center">
    <a class="button" href="/store/list">StoreList</a>
    <a class="button" href="/store/data/list?id=<%= $store_id %>">DataList</a>
</div>
%#EOF

