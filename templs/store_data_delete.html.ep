%#
%# $Id$
%#
% layout 'default';
% title 'Dumper';
% use Mojo::Util qw(dumper url_escape);
% use Mojo::JSON qw(decode_json);

% use utf8;
% use strict;

% my $m = $self->app->model;

% my $storeID = $req->param('id');
% my $dataname = $req->param('dataname');

% my $storeProfile = $m->storeProfile($storeID);
% my $storeHostname = $storeProfile->{'hostname'};
% my $storeUsername = $storeProfile->{'username'};
% my $storePassword = $storeProfile->{'password'};

% my $jobID = $m->jobCreate;
% $m->jobUpdate(
%     $jobID,
%     type => 'dropdata',
%     sourceid => $storeID,
%     destid => $storeID,
%     author => $c->session('username')
% );

% my $ua = Mojo::UserAgent->new(max_redirects => 5);

% my $datanameEsc = url_escape $dataname;
% my $param = "dataname=$datanameEsc";

% my $tx = $ua->get("https://$storeUsername:$storePassword\@$storeHostname:3002/data/delete?$param");

% my $body;
% eval { $body = $tx->result->body };
% $body ||= '{"result":"mistake"}';
% my $res = decode_json($body);

% if ($res->{'result'} eq 'success') {
    <div class="callout success">
        Store <%= $storeHostname %> deleted <%= $dataname %> as job <%= $jobID %>.
    </div>
%   $m->storeDataUpdate($storeID);
%   $m->jobUpdate($jobID, status => 'deleted', error => 'noerr', stop => $m->timestamp);
% }

% if ($res->{'result'} ne 'success') {
    <div class="callout alert">
        Agent <%= $storeHostname %> cannot delete <%= $dataname %>. 
        Job <%= $jobID %> was cancel.
    </div>
%   $m->jobUpdate($jobID, status => 'pushjob', error => 'pusherr', stop => $m->timestamp);
% }

<div class="text-center">
    <a class="button" href="/store/list">StoreList</a>
    <a class="button" href="/store/data/list?id=<%= $storeID %>">DataList</a>
</div>
%#EOF

