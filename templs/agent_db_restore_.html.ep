%#
%# $Id$
%#
% layout 'default';
% title 'Dumper';
% use Mojo::Util qw(dumper);
% use Mojo::JSON qw(j encode_json decode_json);

% use utf8;
% use strict;

% my $m = $self->app->model;

% my $dbname = $req->param('dbname') || undef;
% my $dataname = $req->param('dataname') || undef;
% my $agent_id = $req->param('agentid') || undef;
% my $store_id = $req->param('storeid') || undef;

% my $newname = $req->param('newname') || undef;

% my $agent_profile = $m->agent_profile($agent_id);
% my $agent_hostname = $agent_profile->{'hostname'} || '';
% my $agent_username = $agent_profile->{'username'} || '';
% my $agent_password = $agent_profile->{'password'} || '';

% my $store_profile = $m->store_profile($store_id);
% my $store_hostname = $store_profile->{'hostname'} || '';
% my $store_username = $store_profile->{'username'} || '';
% my $store_password = $store_profile->{'password'} || '';

% my $masterHostname = $self->app->config('hostname');
% my $job_id = $m->job_create;
% $m->job_update(
%     $job_id,
%     type => 'dbrestore',
%     sourceid => $store_id,
%     destid => $agent_id
% );
% my $jobMagic = $m->job_profile($job_id)->{'magic'};

% my $agent_alive = $m->agent_alive($agent_id);
% unless ($agent_alive) {
    <div class="callout alert">
        Oops...Agent <%= $agent_hostname %> not respond.
        Please, check agent configuration.
    </div>
%   $m->job_update($job_id, error => 'connecterr', stop => $m->timestamp);
% }

% my $store_alive = $m->store_alive($store_id);
% unless ($store_alive) {
    <div class="callout alert">
        Oops.. Store <%= $store_hostname %> not respond.
        Please, check store configuration.
    </div>
%   $m->job_update($job_id, error => 'connecterr', stop => $m->timestamp);
% }

% if ($agent_alive && $store_alive) {
%     my $ua = Mojo::UserAgent->new(max_redirects => 5);

%     my $param = "dbname=$dbname";
%     $param .= "&dataname=$dataname";
%     $param .= "&store=$store_hostname";
%     $param .= "&storelogin=$store_username";
%     $param .= "&storepwd=$store_password";
%     $param .= "&newname=$newname";

%     $param .= "&master=$masterHostname";
%     $param .= "&jobid=$job_id";
%     $param .= "&magic=$jobMagic";

%     $m->job_update($job_id, status => 'pushjob');
%     my $tx = $ua->get("https://$agent_username:$agent_password\@$agent_hostname:3001/db/restore?$param");

%     my $body = '{"result":"mistake"}';
%     eval { $body = $tx->result->body };
%     my $res = decode_json($body);

%     if ( $res->{'result'} eq 'success' ) {
        <div class="callout success">
            Agent <%= $agent_hostname %> now restore database <%= $dbname %> as job <%= $job_id %>.
        </div>
%       $m->job_update($job_id, status => 'pushjob', error => 'noerr', stop => $m->timestamp);
%     }

%     if ( $res->{'result'} ne 'success' ) {
        <div class="callout alert">
            Agent <%= $agent_hostname %> not correct responded for the request.
            Job <%= $job_id %> was cancel.
        </div>
%       $m->job_update($job_id, status => 'pushjoberr', error => 'pushjoberr', stop => $m->timestamp);
%     }
% }

<div class="text-center">
    <a class="button" href="/agent/db/list?id=<%= $agent_id %>">DBList</a>
    <a class="button" href="/store/data/list?id=<%= $store_id %>">DataList</a>
</div>
%#EOF

